2,13c2,17
< layer {
<   name: 'input-data'
<   type: 'Python'
<   top: 'data'
<   top: 'im_info'
<   top: 'gt_boxes'
<   top: 'gt_head'
<   python_param {
<     module: 'roi_data_layer.layerHead'
<     layer: 'RoIDataLayer'
<     param_str: "'num_classes': 2"
<   }
---
> 
> ################################################################################
> ## Input
> ################################################################################
> 
> input: "data"
> input_shape {
>   dim: 1
>   dim: 3
>   dim: 640
>   dim: 1056
> }
> input: "im_info"
> input_shape {
>   dim: 1
>   dim: 6
6244a6249,6252
> 
> 
> 
> 
6304,6349c6312,6315
< 
< layer {
<   name: 'rpn-data'
<   type: 'Python'
<   bottom: 'rpn_cls_score'
<   bottom: 'gt_boxes'
<   bottom: 'im_info'
<   bottom: 'data'
<   top: 'rpn_labels'
<   top: 'rpn_bbox_targets'
<   top: 'rpn_bbox_inside_weights'
<   top: 'rpn_bbox_outside_weights'
<   python_param {
<     module: 'rpn.anchor_target_layer'
<     layer: 'AnchorTargetLayer'
<     param_str: "{'base_size': 8, 'feat_stride': 8, 'scales': [3, 6, 9, 16, 32], 'ratios': [1.0, 2.0, 3.0, 4.0, 5.0]}"
<   }
< }
< layer {
<   name: "rpn_loss_cls"
<   type: "SoftmaxWithLoss"
<   bottom: "rpn_cls_score_reshape"
<   bottom: "rpn_labels"
<   propagate_down: 1
<   propagate_down: 0
<   top: "rpn_cls_loss"
<   loss_weight: 1
<   loss_param {
<     ignore_label: -1
<     normalize: true
<   }
< }
< layer {
<   name: "rpn_loss_bbox"
<   type: "SmoothL1Loss"
<   bottom: "rpn_bbox_pred"
<   bottom: "rpn_bbox_targets"
<   bottom: 'rpn_bbox_inside_weights'
<   bottom: 'rpn_bbox_outside_weights'
<   top: "rpn_loss_bbox"
<   loss_weight: 1
<   smooth_l1_loss_param { sigma: 3.0 }
< }
< 
< #========= RoI Proposal ============
< 
---
>   
> ################################################################################
> ## Proposal
> ################################################################################
6363c6329,6331
< # C++ implementation of the proposal layer
---
> 
> 
> 
6370,6371c6338,6339
<   top: 'rpn_rois'
<   top: 'rpn_scores'
---
>   top: 'rois'
>   top: 'scores'
6378c6346
<     post_nms_topn: 2000
---
>     post_nms_topn: 200
6383,6387d6350
< layer {
<   name: 'mute_rpn_scores'
<   bottom: 'rpn_scores'
<   type: 'Silence'
< }
6389,6615d6351
< layer {
<   name: 'roi-data'
<   type: 'Python'
<   bottom: 'rpn_rois'
<   bottom: 'gt_boxes'
<   bottom: 'gt_head'
<   top: 'rois'
<   top: 'labels'
<   top: 'bbox_targets'
<   top: 'bbox_inside_weights'
<   top: 'bbox_outside_weights'
<   top: 'head_targets'
<   python_param {
<     module: 'rpn.proposal_target_head_layer'
<     layer: 'ProposalTargetLayer'
<     param_str: "'num_classes': 2"
<   }
< }
< 
< 
< ##########################
< ## Readonly RoI Network ##
< ######### Start ##########
< layer {
<   name: "roi_pool5_readonly"
<   type: "ROIAlign"
<   bottom: "convf"
<   bottom: "rois"
<   top: "pool5_readonly"
<   propagate_down: false
<   propagate_down: false
<   roi_pooling_param {
<     pooled_w: 6
<     pooled_h: 6
<     spatial_scale: 0.125 # 1/8
<   }
< }
< layer {
<   name: "fc6_readonly"
<   type: "InnerProduct"
<   bottom: "pool5_readonly"
<   top: "fc6_readonly"
<   propagate_down: false
<   param {
<     name: "fc6_w"
<   }
<   param {
<     name: "fc6_b"
<   }
<   inner_product_param {
<     num_output: 4096
<   }
< }
< layer {
<   name: "relu6_readonly"
<   type: "ReLU"
<   bottom: "fc6_readonly"
<   top: "fc6_readonly"
<   propagate_down: false
< }
< layer {
<   name: "drop6_readonly"
<   type: "Dropout"
<   bottom: "fc6_readonly"
<   top: "fc6_readonly"
<   propagate_down: false
<   dropout_param {
<     dropout_ratio: 0.5
<   }
< }
< layer {
<   name: "fc7_readonly"
<   type: "InnerProduct"
<   bottom: "fc6_readonly"
<   top: "fc7_readonly"
<   propagate_down: false
<   param {
<     name: "fc7_w"
<   }
<   param {
<     name: "fc7_b"
<   }
<   inner_product_param {
<     num_output: 4096
<   }
< }
< layer {
<   name: "relu7_readonly"
<   type: "ReLU"
<   bottom: "fc7_readonly"
<   top: "fc7_readonly"
<   propagate_down: false
< }
< layer {
<   name: "drop7_readonly"
<   type: "Dropout"
<   bottom: "fc7_readonly"
<   top: "fc7_readonly"
<   propagate_down: false
<   dropout_param {
<     dropout_ratio: 0.5
<   }
< }
< layer {
<   name: "cls_score_readonly"
<   type: "InnerProduct"
<   bottom: "fc7_readonly"
<   top: "cls_score_readonly"
<   propagate_down: false
<   param {
<     name: "cls_score_w"
<   }
<   param {
<     name: "cls_score_b"
<   }
<   inner_product_param {
<     num_output: 2
<     weight_filler {
<       type: "gaussian"
<       std: 0.01
<     }
<     bias_filler {
<       type: "constant"
<       value: 0
<     }
<   }
< }
< layer {
<   name: "bbox_pred_readonly"
<   type: "InnerProduct"
<   bottom: "fc7_readonly"
<   top: "bbox_pred_readonly"
<   propagate_down: false
<   param {
<     name: "bbox_pred_w"
<   }
<   param {
<     name: "bbox_pred_b"
<   }
<   inner_product_param {
<     num_output: 8
<     weight_filler {
<       type: "gaussian"
<       std: 0.001
<     }
<     bias_filler {
<       type: "constant"
<       value: 0
<     }
<   }
< }
< 
< 
< layer {
<   name: "head_pred_readonly"
<   type: "InnerProduct"
<   bottom: "fc7_readonly"
<   top: "head_pred_readonly"
<   propagate_down: false
<   param {
<     name: "head_pred_w"
<   }
<   param {
<     name: "head_pred_b"
<   }
<   inner_product_param {
<     num_output: 8
<     weight_filler {
<       type: "gaussian"
<       std: 0.001
<     }
<     bias_filler {
<       type: "constant"
<       value: 0
<     }
<   }
< }
< 
< 
< layer {
<   name: "cls_prob_readonly"
<   type: "Softmax"
<   bottom: "cls_score_readonly"
<   top: "cls_prob_readonly"
<   propagate_down: false
< }
< 
< layer {
<   name: "hard_roi_mining"
<   type: "Python"
<   bottom: "cls_prob_readonly"
<   bottom: "bbox_pred_readonly"
<   bottom: "rois"
<   bottom: "labels"
<   bottom: "bbox_targets"
<   bottom: "bbox_inside_weights"
<   bottom: "bbox_outside_weights"
<   bottom: "head_pred_readonly"
<   bottom: "head_targets"
< 
<   top: "rois_hard"
<   top: "labels_hard"
<   top: "bbox_targets_hard"
<   top: "bbox_inside_weights_hard"
<   top: "bbox_outside_weights_hard"
<   top: "head_targets_hard"
< 
<   propagate_down: false
<   propagate_down: false
<   propagate_down: false
<   propagate_down: false
<   propagate_down: false
<   propagate_down: false
<   propagate_down: false
<   propagate_down: false
<   propagate_down: false
< 
<   python_param {
<     module: "roi_data_layer.layerHead"
<     layer: "OHEMDataLayer"
<     param_str: "'num_classes': 2"
<   }
< }
< 
< ###########################################################################
< ## RCNN
< ###########################################################################
6616a6353
> #######################cg_add############################
6622c6359
<   bottom: "rois_hard"
---
>   bottom: "rois"
6633d6369
< 
6729d6464
< 
6787,6812d6521
< layer {
<   name: "loss_cls"
<   type: "SoftmaxWithLoss"
<   bottom: "cls_score"
<   bottom: "labels_hard"
<   top: "loss_cls"
<   propagate_down: true
<   propagate_down: false
<   loss_weight: 1
< }
< 
< layer {
<   name: "loss_bbox"
<   type: "SmoothL1Loss"
<   bottom: "bbox_pred"
<   bottom: "bbox_targets_hard"
<   bottom: "bbox_inside_weights_hard"
<   bottom: "bbox_outside_weights_hard"
<   top: "loss_bbox"
<   propagate_down: true
<   propagate_down: false
<   propagate_down: false
<   propagate_down: false
<   loss_weight: 1
< }
< 
6815,6826c6524,6527
<   name: "loss_head"
<   type: "SmoothL1Loss"
<   bottom: "head_pred"
<   bottom: "head_targets_hard"
<   bottom: "bbox_inside_weights"
<   bottom: "bbox_outside_weights"
<   top: "loss_head"
<   propagate_down: true
<   propagate_down: false
<   propagate_down: false
<   propagate_down: false
<   loss_weight: 1
---
>   name: "cls_prob"
>   type: "Softmax"
>   bottom: "cls_score"
>   top: "cls_prob"
6828d6528
< 
